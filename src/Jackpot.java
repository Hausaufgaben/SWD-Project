import java.util.Random;
import java.util.Iterator;

/**
 * Creates an object ticket for storing jackpot lottery numbers.
 * For lottery game, this ticket contains a result from a drawn lottery.
 * This jackpot ticket can compare with other entry tickets to find the number
 * of hits.
 * 
 * @author Purit Thong-On
 * @author Piyaphat Russamitinakornkul
 * @version 2
 * @since 26/05/2015
 */
public class Jackpot extends Ticket {
    /*****************************
     * 1. Class data member here *
     ****************************/
    final private static Random randomer = new Random();

    /*******************
     * 2. Constructors *
     *******************/
    /**
     * Constructs a special ticket as a drawn lottery result. A ticket is 
     * generated right away.
     * @param lower Minimum value allowed for this ticket
     * @param upper Maximum value allowed for this ticket
     * @param limit Capacity required for this ticket
     */
    public Jackpot(int lower, int upper, int limit) {
        super(lower, upper, limit, null);
        
        drawLottery();
    }
    
    /**
     * Constructs a special ticket as a drawn lottery result with given numbers 
     * recorded on this ticket.
     * @param lower Minimum value allowed for this ticket
     * @param upper Maximum value allowed for this ticket
     * @param limit Capacity required for this ticket
     * @param numbers A list of given numbers for this ticket
     */
    public Jackpot(int lower, int upper, int limit, Integer[] numbers) {
        super(lower, upper, limit, numbers, null);
    }
    
    /**********************
     * 3. General Methods *
     **********************/
    /**
     * Generates drawing number on a ticket.
     */
    public void drawLottery() {
        int temp;
        clear();
        
        while(size() != getLimit()) {
            temp = randInt(getLowerBound(), getUpperBound());
            if(!contains(temp))
                add(temp);
        }
    }
    
    /**
     * Counts total matches of a given <code>entry</code> ticket.
     * @param entry A ticket to be checked
     * @return Total matches of numbers on this <code>entry</code> ticket.
     */
    public int validateHits(Ticket entry) {
        int count = 0;
        Iterator<Integer> i = entry.iterator();
        
        while(i.hasNext())
            if(contains(i.next()))
                ++count;
        
        return count;
    }
    
    /**
     * Generate one random integer within a range [a, b].
     * @param a A lower bound integer
     * @param b An upper bound integer
     * @return An integer generated by random
     */
    private static int randInt(int a, int b) {
        return randomer.nextInt(b - a) + 1 + a;
    }
}
